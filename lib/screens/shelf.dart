import 'package:flutter/material.dart';
import '../components/book.dart';
import '../services/fetchtitles.dart';
import 'package:http/http.dart' as http;

// Generalized widget for rendering all the required books

class Shelf extends StatefulWidget {
  @override
  createState() => new ShelfState();
}

class ShelfState extends State<Shelf> {

  List<Book> _books = [];

//  void _addBook(String bookName, List<String> bookAuthor) {
//    //SetState() will rerender the Shelf
//    setState(() {
//      int index = _books.length;
//      _books.add(new Book(bookName, bookAuthor)); // Autogenerated Test Data
//    });
//  }

  Widget _buildShelf() {
    return new GridView.builder(
      gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
        crossAxisCount: 2,
      ),
      // ignore: missing_return
      itemBuilder: (context, index) {

        if (index < _books.length) {
          return _books[index];
        }
      },
    );
  }

  @override
  Widget build(BuildContext context) {
    return new Scaffold(
      body: _buildShelf(),
      floatingActionButton: new FloatingActionButton(
          onPressed: _pushAddBookScreen,
        tooltip: 'Add Book',
        child: new Icon(Icons.add)
      ),
    );
  }

  void _renderResultsScreen(String val) {
    // Push book search results page onto the stack
    Navigator.of(context).push(
      new MaterialPageRoute(
        builder: (context) {
          return new Scaffold(
            appBar: new AppBar(
              title: new Text('Results')
            ),
                body: FutureBuilder<List<Book>>(
                future: fetchBooks(val),
                  builder: (context, snapshot) {
                    if (snapshot.hasError) print(snapshot.error);

                    return snapshot.hasData
                        ? BooksList(books: snapshot.data)
                        : Center(child: CircularProgressIndicator());
                  },
              )
            );
          }
        )
      );
    }

  void _pushAddBookScreen() {
    // Push the book add page onto the stack

    Navigator.of(context).push(
      new MaterialPageRoute(
        builder: (context) {
          return new Scaffold(
            appBar: new AppBar(
              title: new Text('Add New Book')
            ),
            body: new Column(
              children: <Widget> [
              new TextField(
              autofocus: true,
              onSubmitted: (val) {
                _renderResultsScreen(val);
              },
              decoration: new InputDecoration(
                  hintText: 'Book Title',
                  contentPadding: const EdgeInsets.all(16.0)
              ),
            )
              ]
            )
          );
        }
      )
    );
  }
}

class BooksList extends StatelessWidget {
  final List<Book> books;

  BooksList({Key key, this.books}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return ListView.builder(
      // ignore: missing_return
      itemBuilder: (context, index) {
        if (index < books.length) {
          final bookWidget = new Book("Lorem Ipsum", ["Author1", "Author2"], "Sample", "Test");
          return bookWidget;
        }
      }
    );
  }
}